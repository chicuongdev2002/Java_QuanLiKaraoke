/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import connect.Connect;
import dao.ChucVu_DAO;
import dao.NhanVien_DAO;
import entity.ChucVu;
import entity.NhanVien;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ChiCuong
 *
 */
public class QuanLiNhanVien extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form NhanVien
     */
    public QuanLiNhanVien() {
        Connect.getInstance().getConnection(); // TODO Auto-generated catch block
        this.model = new DefaultTableModel();
        initComponents();
        rdNam.setSelected(true);
        model = (DefaultTableModel) tblNhanVien.getModel();
        dsnv = nv_dao.getAllNV();
        txtNgayHienTai.setEnabled(false);
        DocDuLieuVaoTable();
        loadChucVu();

    }
        public void loadChucVu() {
        String flag = "";
        ArrayList<ChucVu>dscv = cv_dao.getAllChucVu();
        for (ChucVu cv : dscv) {
            if (!(cv_dao.getTenChucVuByMaChucVu(cv.getMaChucVu())).equals(flag)) {
                flag = cv_dao.getTenChucVuByMaChucVu(cv.getMaChucVu());
                cbChucVu.addItem(flag);

            }

        }

    }

    public JPanel getPnQuanLiNhanVien() {
        return pnQuanLiNhanVien;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        pnQuanLiNhanVien = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lbmaNV = new javax.swing.JLabel();
        txtmaNV = new javax.swing.JTextField();
        lbTenNV = new javax.swing.JLabel();
        lbdiaChi = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        txtdiaChi = new javax.swing.JTextField();
        lbngaySinh = new javax.swing.JLabel();
        lbSDT = new javax.swing.JLabel();
        lbchucVu = new javax.swing.JLabel();
        lbgioiTinh = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        cbChucVu = new javax.swing.JComboBox<>();
        dateNgaySinh = new com.toedter.calendar.JDateChooser();
        rdNu = new javax.swing.JRadioButton();
        rdNam = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txtNgayHienTai = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        jLabel1.setText("Quản lí nhân viên");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin nhân viên"));

        lbmaNV.setText("Mã nhân viên:");

        txtmaNV.setEditable(false);
        txtmaNV.setEnabled(false);
        txtmaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmaNVActionPerformed(evt);
            }
        });

        lbTenNV.setText("Tên nhân viên:");

        lbdiaChi.setText("Địa chỉ:");

        lbngaySinh.setText("Ngày sinh:");

        lbSDT.setText("SDT:");

        lbchucVu.setText("Chức vụ:");

        lbgioiTinh.setText("Giới tính:");

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        dateNgaySinh.setDateFormatString("dd-MM-yyyy");
        dateNgaySinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateNgaySinhMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdNu);
        rdNu.setText("Nữ");

        buttonGroup1.add(rdNam);
        rdNam.setText("Nam");

        jLabel2.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbdiaChi)
                    .addComponent(lbTenNV)
                    .addComponent(lbmaNV)
                    .addComponent(lbngaySinh)
                    .addComponent(lbSDT)
                    .addComponent(lbchucVu)
                    .addComponent(lbgioiTinh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmaNV)
                            .addComponent(txtTenNV)
                            .addComponent(txtdiaChi)
                            .addComponent(txtSDT)
                            .addComponent(cbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                        .addGap(78, 78, 78))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rdNam)
                        .addGap(18, 18, 18)
                        .addComponent(rdNu)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbmaNV))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTenNV)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbdiaChi)
                    .addComponent(txtdiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbngaySinh)
                    .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbchucVu)
                    .addComponent(cbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbgioiTinh)
                    .addComponent(rdNu)
                    .addComponent(rdNam)
                    .addComponent(jLabel2))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons/icons_global/add-16.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons/icons_global/fix-16.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons/icons_global/delete-16.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaTrang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons/icons_global/Reset-icon.png"))); // NOI18N
        btnXoaTrang.setText("Rỗng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoaTrang)
                    .addComponent(btnXoa))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách dịch vụ"));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Tên NV", "Địa chỉ", "Ngày sinh", "SDT", "Chức vụ", "Giới tính"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addGap(34, 34, 34))
        );

        jButton1.setText("Xuất file excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtNgayHienTai.setEnabled(false);

        javax.swing.GroupLayout pnQuanLiNhanVienLayout = new javax.swing.GroupLayout(pnQuanLiNhanVien);
        pnQuanLiNhanVien.setLayout(pnQuanLiNhanVienLayout);
        pnQuanLiNhanVienLayout.setHorizontalGroup(
            pnQuanLiNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuanLiNhanVienLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuanLiNhanVienLayout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(txtNgayHienTai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(14, 14, 14))
            .addGroup(pnQuanLiNhanVienLayout.createSequentialGroup()
                .addGap(498, 498, 498)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnQuanLiNhanVienLayout.setVerticalGroup(
            pnQuanLiNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuanLiNhanVienLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(pnQuanLiNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnQuanLiNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtNgayHienTai))
                .addGap(0, 108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnQuanLiNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnQuanLiNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtmaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmaNVActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed
//THÊM NHÂN VIÊN
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (valiData()) {
            themNhanVien(); // TODO add your handling code here
            updateTable();
        }
    }//GEN-LAST:event_btnThemActionPerformed
//RESET 
    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        //Date date = (Date) java.util.Calendar.getInstance().getTime();
        int c = JOptionPane.showConfirmDialog(null, "Bạn có muốn làm mới trang này không ?", "Thông báo",
                JOptionPane.YES_NO_OPTION);
        if (c == JOptionPane.YES_OPTION) {
            xoaTrang();
        }

    }//GEN-LAST:event_btnXoaTrangActionPerformed
//CẬP NHẬT NHÂN VIÊN
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (valiData()) {
            CapNhatNhanVien();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnSuaActionPerformed
//HIỂN THỊ TABLE LÊN TEXTFILED
    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        int row = tblNhanVien.getSelectedRow();
        txtmaNV.setText(model.getValueAt(row, 0).toString());
        txtTenNV.setText(model.getValueAt(row, 1).toString());
        txtdiaChi.setText(model.getValueAt(row, 2).toString());
        try {

            java.util.Date date = (java.util.Date) new SimpleDateFormat("dd-MM-yyyy").parse((String) model.getValueAt(row, 3).toString());
            dateNgaySinh.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(QuanLiNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:// TODO add your handling code here:// TODO add your handling code here:// TODO add your handling code here:
        txtSDT.setText(model.getValueAt(row, 4).toString());
        cbChucVu.setSelectedItem(model.getValueAt(row, 5).toString());
        rdNam.setSelected(model.getValueAt(row, 6).toString() == "Nam" ? true : false);// TODO add your handling code here:
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void dateNgaySinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateNgaySinhMouseClicked


    }//GEN-LAST:event_dateNgaySinhMouseClicked
//NÚT XÓA NHÂN VIÊN
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        XoaNhanVien();// TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
xuatFileExcel();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    @Override
    //Thao tác chuột từ bảng lên textfield
    public void mouseClicked(MouseEvent e) {
        Object o = e.getSource();
        if (o.equals(tblNhanVien)) {
            int row = tblNhanVien.getSelectedRow();
            txtmaNV.setText(model.getValueAt(row, 0).toString());
            txtTenNV.setText(model.getValueAt(row, 1).toString());
            txtdiaChi.setText(model.getValueAt(row, 2).toString());
            txtSDT.setText(model.getValueAt(row, 4).toString());
            cbChucVu.setSelectedItem(model.getValueAt(row, 5).toString());
            rdNam.setSelected(model.getValueAt(row, 6).toString() == "Nam" ? true : false);
           
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLiNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLiNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLiNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLiNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QuanLiNhanVien().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(QuanLiNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

//    private NhanVien getDataInForm() throws ParseException {
//        String ma = txtmaNV.getText().trim().equals("") ? "0" : txtmaNV.getText().trim();
//        int maNV = Integer.parseInt(ma);
//        String hoTen = txtTenNV.getText().trim();
//        String sdt = txtSDT.getText().trim();
//        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
//        Date ngaySinh = (Date) df.parse(dateNgaySinh.getDateFormatString());
//        String diaChi = txtdiaChi.getText().trim();
//        String chucVu = cbChucVu.getSelectedItem().toString().trim();
//        Boolean gioiTinh = buttonGroup1.getSelection().isSelected();
//        NhanVien nv = new NhanVien(maNV, hoTen, diaChi, ngaySinh, sdt, chucVu, gioiTinh);
//
//        return nv;
//    }
    private void DocDuLieuVaoTable() {
        if (dsnv.size() == 0) {
            JOptionPane.showMessageDialog(null, "Không có nhân viên nào trong máy!");
            model.addRow(new Object[]{"Không có thông tin", "Không có thông tin", "Không có thông tin",
                "Không có thông tin", "Không có thông tin", "Không có thông tin", "Không có thông tin"});
            return;
        }
        for (NhanVien item : dsnv) {
            String date = formatDate((Date) item.getNgaySinh());
            String tenChucVu=cv_dao.getTenChucVuByMaChucVu(item.getChucVu());
            model.addRow(new Object[]{item.getMaNV(), item.getHoTen(), item.getDiaChi(), date, item.getSDT(),
                tenChucVu, item.getGioiTinh() == true ? "Nam" : "Nữ"});
        }
    }

    private String formatDate(Date date) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyy");
        return sdf.format(date);
    }

    private void xoaTrang() {
        txtmaNV.setText("");
        txtTenNV.setText("");
        txtdiaChi.setText("");
        txtSDT.setText("");
        //dateNgaySinh.setDate(date);
        cbChucVu.setSelectedIndex(0);
        rdNam.setSelected(true);
    }

    private void themNhanVien() {
        String ma = txtmaNV.getText().trim().equals("") ? "0" : txtmaNV.getText().trim();
        int maNV = Integer.parseInt(ma);
        String hoTen = txtTenNV.getText().trim();
        String sdt = txtSDT.getText().trim();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        java.sql.Date date = new java.sql.Date(dateNgaySinh.getDate().getTime());
        String diaChi = txtdiaChi.getText().trim();
        String chucVu = cbChucVu.getSelectedItem().toString().trim();
        int cv=cv_dao.getMaChucVuByTenChucVu(chucVu);
        boolean gioiTinh = rdNam.isSelected();
        NhanVien nv = new NhanVien(hoTen, diaChi, date, sdt, cv, gioiTinh);
        boolean them = nv_dao.ThemNhanVien(nv);
        if (them == true) {
            JOptionPane.showMessageDialog(null, "Thêm nhân viên thành công");
        }
    }

    private void CapNhatNhanVien() {
        String ma = txtmaNV.getText().trim().equals("") ? "0" : txtmaNV.getText().trim();
        int maNV = Integer.parseInt(ma);
        String hoTen = txtTenNV.getText().trim();
        String sdt = txtSDT.getText().trim();
        java.sql.Date date = new java.sql.Date(dateNgaySinh.getDate().getTime());
        String diaChi = txtdiaChi.getText().trim();
        String chucVu = cbChucVu.getSelectedItem().toString().trim();
        int cv=cv_dao.getMaChucVuByTenChucVu(chucVu);
        boolean gioiTinh = rdNam.isSelected();
        NhanVien nv = new NhanVien(maNV, hoTen, diaChi, date, sdt, cv, gioiTinh);
        boolean updateNV = nv_dao.CapNhatNhanVien(nv);
        if (updateNV == true) {
            updateTable();
            JOptionPane.showMessageDialog(null, "Cập nhật nhân viên thành công");
        } else {
            JOptionPane.showMessageDialog(null, "Lỗi cập nhật không thành công");
        }
    }

    private void XoaNhanVien() {
        int row = tblNhanVien.getSelectedRow();
        try {
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Bạn cần chọn dòng cần xóa");
            } else {
                int select = JOptionPane.NO_OPTION;
                String ma = txtmaNV.getText().trim().equals("") ? "0" : txtmaNV.getText().trim();
                int maNV = Integer.parseInt(ma);
                String hoTen = txtTenNV.getText().trim();
                String sdt = txtSDT.getText().trim();
                java.sql.Date date = new java.sql.Date(dateNgaySinh.getDate().getTime());
                String diaChi = txtdiaChi.getText().trim();
                String chucVu = cbChucVu.getSelectedItem().toString().trim();
                int cv=cv_dao.getMaChucVuByTenChucVu(chucVu);
                boolean gioiTinh = rdNam.isSelected();
                NhanVien nv = new NhanVien(maNV, hoTen, diaChi, date, sdt, cv, gioiTinh);
                String tenNV = nv.getHoTen();
                select = JOptionPane.showConfirmDialog(this, "Cảnh báo xóa nhân viên " + tenNV
                        + " sẽ dẫn đến xóa các dữ liệu có liên quan. Hãy suy nghĩ thật kỹ trước khi quyết định",
                        "Cảnh báo", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                if (select == JOptionPane.YES_OPTION) {
                    nv_dao.XoaNhanVien(nv);
                    model.removeRow(row);
                    updateTable();
                    JOptionPane.showMessageDialog(null, "Xóa thành công");
                }
            }
        } catch (Exception e3) {
            JOptionPane.showMessageDialog(null, "Xóa nhân viên thất bại");
        }
    }

    private void XoaHetDuLieuTrenBang() {
        model.getDataVector().removeAllElements();
    }

    private void updateTable() {
        model.setRowCount(0);
        for (NhanVien nv : nv_dao.getAllNV()) {
            String gt = "Nữ";
            if (nv.getGioiTinh()) {
                gt = "Nam";
            }
            String date = formatDate((Date) nv.getNgaySinh());
            String cv=cv_dao.getTenChucVuByMaChucVu(nv.getChucVu());
            Object[] row = {nv.getMaNV(), nv.getHoTen(), nv.getDiaChi(), date, nv.getSDT(),cv, gt};
            model.addRow(row);
        }
    }

    private boolean valiData() {
        String thongbao = "";
        if (txtSDT.getText().isEmpty() || txtTenNV.getText().isEmpty() || txtdiaChi.getText().isEmpty() || dateNgaySinh.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Không được để trống trường dữ liệu");
            return false;
        }

        // vali số điện thoại
        String regexSDT = "^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})$";
        Pattern patternSDT = Pattern.compile(regexSDT);
        Matcher matchSDT = patternSDT.matcher(txtSDT.getText());
        boolean checkSDT = matchSDT.matches();

        if (!checkSDT) {
            thongbao += "Số Điện Thoại Không Hợp Lệ\n";
        }
//        if(dateNgaySinh.getDate().after())
//        {
//            
//        }
        if (thongbao.isEmpty()) {
            return true;
        }
        JOptionPane.showMessageDialog(this, thongbao);
        return false;

    }
    private void xuatFileExcel() {
        int rowCount = tblNhanVien.getRowCount();
        if (rowCount == 0) {
            JOptionPane.showMessageDialog(null, "Không có dữ liệu để xuất thống kê!");
            return;
        }
        JFileChooser fChooser = new JFileChooser();

        fChooser.addChoosableFileFilter(new FileFilter() {

            @Override
            public String getDescription() {
                // TODO Auto-generated method stub
                return "Excell file (*.xls, *xlsx)";
            }

            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(".xls") || f.getName().toLowerCase().endsWith(".xlsx");
                }
            }

        });

        int i = fChooser.showSaveDialog(this);
        if (i == 0) {
            String path = fChooser.getSelectedFile().getAbsolutePath();
            if (!path.matches("(.)+(\\.xls|\\.xlsx)$")) {
                path += ".xlsx";
            }
            boolean t = ghiFileExcel(path);

            if (t) {
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Xuất file không thành công");
            }
        }
    }

    public boolean ghiFileExcel(String path) {
        Workbook workBook = new XSSFWorkbook();

        Sheet sh = workBook.createSheet("Sheet1");
        String header[] = {"Ngày xuất danh sách","STT", "Mã nhân viên", "Họ Tên", "Địa chỉ", "Ngày sinh", "Số điện thoại", "Chức vụ", "Giới tính"};

        Row rowHeader = sh.createRow(0);
        for (int i = 0; i < header.length; i++) {
            Cell cell = rowHeader.createCell(i);
            cell.setCellValue(header[i]);
        }

        int numRow = 1;
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Row row = sh.createRow(numRow++);
        int stt = 1;
        txtNgayHienTai.setText(df.format(new java.util.Date()));
        row.createCell(0).setCellValue(txtNgayHienTai.getText());
        row.createCell(1).setCellValue(stt);
        row.createCell(2).setCellValue(tblNhanVien.getValueAt(0, 0).toString());
        row.createCell(3).setCellValue(tblNhanVien.getValueAt(0, 1).toString());
        row.createCell(4).setCellValue(tblNhanVien.getValueAt(0, 2).toString());
        row.createCell(5).setCellValue(tblNhanVien.getValueAt(0, 3).toString());
        row.createCell(6).setCellValue(tblNhanVien.getValueAt(0, 4).toString());
        row.createCell(7).setCellValue(tblNhanVien.getValueAt(0, 5).toString());
        row.createCell(8).setCellValue(tblNhanVien.getValueAt(0, 6).toString());
        int rowCount = tblNhanVien.getRowCount();
        for (int i = 1; i < rowCount; i++) {
            row = sh.createRow(numRow++);
            stt++;
            row.createCell(1).setCellValue(stt);
        row.createCell(2).setCellValue(tblNhanVien.getValueAt(i, 0).toString());
        row.createCell(3).setCellValue(tblNhanVien.getValueAt(i, 1).toString());
        row.createCell(4).setCellValue(tblNhanVien.getValueAt(i, 2).toString());
        row.createCell(5).setCellValue(tblNhanVien.getValueAt(i, 3).toString());
        row.createCell(6).setCellValue(tblNhanVien.getValueAt(i, 4).toString());
        row.createCell(7).setCellValue(tblNhanVien.getValueAt(i, 5).toString());
        row.createCell(8).setCellValue(tblNhanVien.getValueAt(i, 6).toString());
        
        }

        for (int i = 0; i < header.length; i++) {
            sh.autoSizeColumn(i);
        }

        try {
            FileOutputStream f = new FileOutputStream(path);
            workBook.write(f);
            f.close();
            workBook.close();
        } catch (Exception e) {
            return false;
        }
        return true;

    }
    DefaultTableModel model;
    NhanVien_DAO nv_dao = new NhanVien_DAO();
    ChucVu_DAO cv_dao=new ChucVu_DAO();
    ArrayList<NhanVien> dsnv;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cbChucVu;
    private com.toedter.calendar.JDateChooser dateNgaySinh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbSDT;
    private javax.swing.JLabel lbTenNV;
    private javax.swing.JLabel lbchucVu;
    private javax.swing.JLabel lbdiaChi;
    private javax.swing.JLabel lbgioiTinh;
    private javax.swing.JLabel lbmaNV;
    private javax.swing.JLabel lbngaySinh;
    private javax.swing.JPanel pnQuanLiNhanVien;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JLabel txtNgayHienTai;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtdiaChi;
    private javax.swing.JTextField txtmaNV;
    // End of variables declaration//GEN-END:variables

//    private String formatDate(Date ngaySinh) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
}
